"""Canopy level data"""

import pandas
import numpy
import scipy.stats

from alinea.echap.hs_tt import tt_hs_tag

import alinea.echap
from openalea.deploy.shared_data import shared_data



def conf_int(lst, perc_conf=95):
    """
    Confidence interval - given a list of values compute the square root of
    the variance of the list (v) divided by the number of entries (n)
    multiplied by a constant factor of (c). This means that I can
    be confident of a result +/- this amount from the mean.
    The constant factor can be looked up from a table, for 95pcent confidence
    on a reasonable size sample (>=500) 1.96 is used.
    """

    n, v = len(lst), numpy.var(lst, ddof=1)
    c = scipy.stats.t.interval(perc_conf * 1.0 / 100, n - 1)[1]

    return numpy.sqrt(v / n) * c

#
# To do : include in compil nb plant/rep and generate from notation stem area
#
def scan_data():
    data_file = shared_data(alinea.echap, 'architectural_measurements/Compil_scan.csv')
    df = pandas.read_csv(data_file, decimal='.', sep=',')
    df['daydate'] = pandas.to_datetime(df['prelevement'].values, dayfirst=True).strftime('%Y-%m-%d')
    return df
#
# Biomass scanned plants / biomass microplot
#
def plot_biomass_data():
    t12 = {'daydate': ['2012-03-09'] * 3 + ['2012-04-11'] * 3 + ['2012-05-09'] * 3,
           'rep': [1, 2, 3] * 3,
           'nb_plant_scanned': [10] * 9,
           'dry_mass_scanned_blade': [2.3912, 1.4955, 1.8367] + [6.1498, 7.252,7.895]
                                       + [11.16599, 11.44891, 10.1178],
           'dry_mass_scanned_stem': [1.5412, 0.97, 1.1083] + [10.1299, 10.3606, 11.2501]
                                       + [30.60269, 34.3479, 29.9004],
           'nb_plant_plot': [123, 142, 141] + [129, 117, 135] + [110, 129, 113],
           'dry_mass_plot': [46.5, 51.8, 44.4] + [180.5, 185.0, 179.2] + [438.1, 484.4, 418.5],
           'plot_area': [5 * 0.143 * 0.6] * 9
           }
    df12 = pandas.DataFrame(t12)
    df12['variety'] = 'Tremie12'
    df12['dry_mass_scanned'] = df12['dry_mass_scanned_blade'] + df12['dry_mass_scanned_stem']
    t13 = {'daydate': ['2013-04-22'] * 3 + ['2013-05-03'] * 3,
           'rep': [1, 2, 3] * 2,
           'nb_plant_scanned': [15, 13, 15] + [15, 15, 15],
           'dry_mass_scanned': [14.95, 17.12, 15.89] + [None] * 3,
           'nb_plant_plot': [118, 116, 128] + [98, 130, 126],
           'nb_axe_plot': [625, 615, 678] + [None] * 3,
           'dry_mass_plot': [133.1, 136.8, 147.2] + [None] * 3, # dry mass not available for scanned plants [180.5, 185.0, 179.2],
           'plot_area': [5 * 0.15 * 0.6] * 6}
    df13 = pandas.DataFrame(t13)
    df13['variety'] = 'Tremie13'
    return pandas.concat([df12, df13], axis=0)


# Green pixels on  vertical and obliques images
def image_analysis_data():
    genos = ['MerciaRht3', 'Tremie12', 'Tremie13']
    paths = [shared_data(alinea.echap) / 'canopy_data' / var + '_vertical_images.csv' for var in genos]
    data = [pandas.read_csv(path, decimal=',', sep=';') for path in paths]
    df = pandas.concat(data)
    df['daydate'] = pandas.to_datetime(df['date'].values,
                                       dayfirst=True).strftime('%Y-%m-%d')
    df['zenith_angle'] = 0
    df['po'] = (100 - df['pcent_veg']) / 100.
    paths = [shared_data(alinea.echap) / 'canopy_data' / var + '_inclined_images.csv'
     for var in genos]
    data = [pandas.read_csv(path, decimal=',', sep=';') for path in paths]
    df57 = pandas.concat(data)
    df57['daydate'] = pandas.to_datetime(df57['date'].values,
                                         dayfirst=True).strftime('%Y-%m-%d')
    df57['zenith_angle'] = 57.5
    df57['po'] = (100 - df57['pcent_veg']) / 100.
    what = ['daydate', 'variety', 'zenith_angle', 'po']

    return pandas.concat((df[what], df57[what]), axis=0)

#derived / cached data

def ground_cover_data(variety='Mercia', angle=0):
    df = None
    path = shared_data(alinea.echap) / 'cache' / 'ground_cover_aggregated.csv'
    try:
        df = pandas.read_csv(path)
    except IOError:
        df = image_analysis_data()
        df['ground_cover'] = 1 - df['po']
        df = df.groupby(['variety', 'daydate', 'zenith_angle']).agg([numpy.mean, conf_int])
        df.columns = ['_'.join(c) for c in df.columns]
        df = df.reset_index()
        df.to_csv(path, index=False)

    df = df.loc[(df['variety'] == variety) & (df['zenith_angle'] == angle),:]
    tths = tt_hs_tag(variety)

    return df.merge(tths)


def pai57(variety='Mercia'):
    df = None
    path = shared_data(alinea.echap) / 'cache' / 'pai_aggregated.csv'
    try:
        df = pandas.read_csv(path)
    except IOError:
        df = image_analysis_data()
        df['pai'] = - 0.5 * numpy.log(df['po']) / numpy.cos(numpy.radians(df['zenith_angle']))
        df = df.groupby(['variety', 'daydate', 'zenith_angle']).agg([numpy.mean, conf_int])
        df.columns = ['_'.join(c) for c in df.columns]
        df = df.reset_index()
        df.to_csv(path, index=False)

    df = df.loc[(df['variety'] == variety) & (df['zenith_angle'] == 57.5),:]
    tths = tt_hs_tag(variety)

    return df.merge(tths)

def lai_pai_scan(variety='Tremie12', reset=False):
    """ Lai/Pai estimates from scanned leaves / biomass data"""
    df = None
    path = shared_data(alinea.echap) / 'cache' / 'lai_pai_scan.csv'
    try:
        if reset:
            raise IOError
        df = pandas.read_csv(path)
    except IOError:
        bm = plot_biomass_data()
        scan = scan_data().loc[:, (
        'variety', 'daydate', 'rep', 'N', 'id_Axe', 'A_bl', 'A_bl_green',
        'stem_half_area')]
        scan = scan.loc[scan['daydate'].isin(bm['daydate']),:]
        areas = scan.groupby(('daydate','rep')).agg(sum).reset_index()
        areas = areas.drop(['stem_half_area', 'N'],axis=1)
        stem_areas_ms = scan.groupby(('daydate', 'rep', 'N')).agg(
            numpy.mean).reset_index().groupby(('daydate', 'rep')).agg(
            sum).reset_index().loc[:,
                        ('daydate', 'rep', 'stem_half_area')].rename(
            columns={'stem_half_area': 'A_stem_MS'})
        areas_axe = scan.groupby(('daydate','rep', 'id_Axe')).agg(sum).reset_index()
        areas_ms = areas_axe.loc[areas_axe['id_Axe'] == 'MB', (
        'daydate', 'rep', 'A_bl', 'A_bl_green')].rename(
            columns={'A_bl_green': 'A_bl_green_MS', 'A_bl': 'A_bl_MS'})
        df = bm.merge(areas)
        df = df.merge(areas_ms)
        df = df.merge(stem_areas_ms)
        frac_scanned = df['nb_plant_scanned'] / df['nb_plant_plot']
        frac_scanned_drymass = df['dry_mass_scanned'] / df['dry_mass_plot']
        df['correction_factor'] = frac_scanned / frac_scanned_drymass
        df['stem_leaf_ratio_biomass'] = df['dry_mass_scanned_stem'] / df[
            'dry_mass_scanned_blade']
        df['stem_leaf_ratio_area'] = df['A_stem_MS'] / df[
            'A_bl_MS']
        df['GLAI_density'] = df['A_bl_green'] * 1e-4 / frac_scanned / df['plot_area']
        df['GLAI_biomass'] = df['A_bl_green'] * 1e-4 / frac_scanned_drymass / df['plot_area']
        df['GLAI_MS_density'] = df['A_bl_green_MS'] * 1e-4 / frac_scanned / df['plot_area']
        df['GLAI_MS_biomass'] = df['A_bl_green_MS'] * 1e-4 / frac_scanned_drymass / df['plot_area']
        # for LAI /A_bl, keep 09-03-2012 only, as only this sampling includes dried leaves
        df['LAI_density'] = numpy.where(df['daydate'] == '2012-03-09',
                                        df['A_bl'] * 1e-4 / frac_scanned / df['plot_area'], numpy.nan)
        df['LAI_biomass'] = numpy.where(df['daydate'] == '2012-03-09',
                                        df['A_bl'] * 1e-4 / frac_scanned_drymass / df['plot_area'],
                                        numpy.nan)
        df['plant_density'] = df['nb_plant_plot'] / df['plot_area']
        df['greeness'] = df['A_bl_green'] / df['A_bl']
        df.to_csv(path, index=False)
        #

    df = pandas.concat((df.loc[:,('variety', 'daydate')], df.ix[:, 'stem_leaf_ratio_area':]), axis=1)
    df = df.groupby(['variety', 'daydate']).agg([numpy.mean, conf_int])
    df.columns = ['_'.join(c) for c in df.columns]
    df = df.reset_index()
    df = df.loc[df['variety'] == variety, :]
    tths = tt_hs_tag(variety)

    return df.merge(tths)

    # LAI data
    #
    # def LAI_data():
    #     d = {'Tremie12': pandas.DataFrame(
    #         {'date': ['2012-03-09'] * 3 + ['2012-04-11'] * 3 + ['2012-05-09'] * 3,
    #          'LAI_vert': [0.97, 1.2, 1.14, 3.61, 4.90, 4.42, 4.46,
    #                                4.74, 4.08],
    #           'LAI_tot': [1.35, 1.56, 1.39] + [None] * 6}),
    #         'Tremie13': pandas.DataFrame(
    #         {'TT_date': [941, 941, 941, 1060, 1060, 1060],
    #          'LAI_vert_biomasse': [(4.45 * 0.8), (4.59 * 0.8), (5.27 * 0.8),
    #                                (5.63 * 0.8), (5.29 * 0.8), (6.55 * 0.8)]})}
    #     return d
    #
#
# TC data, PAI = -ln(Po_57) / 0.93
#
# def TC_data():
#     d = {'Mercia_0':pandas.DataFrame({'date':['2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01'],'TC':[0.17,0.16,0.13,0.16,0.12,0.13,0.13,0.14,0.10,0.66,0.66,0.66,0.59,0.58,0.58,0.66,0.65,0.65,0.64,0.69,0.72,0.73,0.72,0.67,0.69,0.81,0.80,0.71,0.52,0.61,0.51,0.53,0.62,0.56,0.68,0.67,0.77]}),
#          'Rht3_0': pandas.DataFrame({'date':['2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-01-19','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-04-27','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01'],'TC':[0.11,0.10,0.11,0.11,0.10,0.10,0.11,0.12,0.12,0.85,0.79,0.79,0.78,0.80,0.80,0.8,0.8,0.81,0.8,0.8,0.82,0.84,0.8,0.85,0.84,0.86,0.83,0.81,0.81,0.55,0.55,0.57,0.49,0.56,0.64,0.64,0.62,0.68]}),
#          'Tremie12_0': pandas.DataFrame({'date':['2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09'],'TC':[0.27,0.24,0.23,0.29,0.30,0.28,0.30,0.31,0.30,0.29,0.28,0.33,0.32,0.36,0.58,0.51,0.37,0.49,0.56,0.62,0.54,0.53,0.62,0.57,0.49,0.69,0.72,0.36,0.58,0.51,0.37,0.49,0.56,0.62,0.54,0.53,0.62,0.57,0.49,0.69,0.72]}),
#          'Tremie13_0': pandas.DataFrame({'date}),
#          'Mercia_57':pandas.DataFrame({'date':['2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-27','2011-04-27','2011-06-01','2011-06-01'],'TC':[0.94,0.95,0.93,0.96,0.96,0.96,0.96,0.95,0.95,0.97,0.98,0.97,0.98]}),
#          'Rht3_57': pandas.DataFrame({'date':['2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-18','2011-04-27','2011-04-27','2011-04-27','2011-06-01','2011-06-01','2011-06-01','2011-06-01','2011-06-01'],'TC':[0.98,0.95,0.95,0.97,0.95,0.96,0.96,0.97,0.94,0.94,0.97,0.98,0.97,0.95,0.96,0.96,0.95,0.97]}),
#          'Tremie12_57': pandas.DataFrame({'date':['2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-03-09','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-04-11','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09','2012-05-09'],'TC':[0.64,0.53,0.61,0.64,0.70,0.56,0.50,0.58,0.55,0.64,0.58,0.68,0.68,0.97,0.96,0.97,0.97,0.99,0.97,0.97,0.98,0.98,0.99,0.99,0.98,0.99,0.99,0.97,0.98,0.98,0.98,0.97,0.98,0.99,0.98]}),
#          'Tremie13_57': pandas.DataFrame({'date})}
#     #ajout convert date en TT
#     varieties=['Mercia_0','Rht3_0','Tremie12_0','Tremie13_0','Mercia_57','Rht3_57','Tremie12_57','Tremie13_57']
#     for var in varieties:
#         d[var]['TT'] = 0.0
#         #d[var].date=map(str,d[var].date)
#         if var=='Mercia_0' or var=='Mercia_57' or var=='Rht3_0' or var=='Rht3_57':
#             corresp = shared_data(alinea.echap, 'corresp_TTHS_mercia_rht3.csv')
#             corresp = pandas.read_csv(corresp, decimal=',', sep=';')
#         elif var=='Tremie12_0' or var=='Tremie12_57':
#             corresp = shared_data(alinea.echap, 'corresp_TTHS_Tremie12.csv')
#             corresp = pandas.read_csv(corresp, decimal=',', sep=';')
#         elif var=='Tremie13_0' or var=='Tremie13_57':
#             corresp = shared_data(alinea.echap, 'corresp_TTHS_Tremie13.csv')
#             corresp = pandas.read_csv(corresp, decimal=',', sep=';')
#         n=0; m=0
#         while n<len(d[var]):
#             if corresp['DATE'][m]==d[var]['date'][n]:
#                 d[var]['TT'][n] = corresp['TT'][m]
#                 n = n + 1
#             else :
#                 m = m + 1
#     return d



# def PAI_photo_data():
#     d = {'Mercia': pandas.DataFrame({'date': ['2011-04-18', '2011-04-18',
#                                               '2011-04-18', '2011-04-18',
#                                               '2011-04-18', '2011-04-18',
#                                               '2011-04-18', '2011-04-18',
#                                               '2011-04-18', '2011-04-27',
#                                               '2011-04-27', '2011-06-01',
#                                               '2011-06-01'],
#                                      'PAI_vert_photo': [3.11, 3.18, 2.93,
#                                                         3.39, 3.58, 3.38,
#                                                         3.39, 3.22, 3.24,
#                                                         3.94, 4.12, 3.82,
#                                                         4.27]}),
#          'Rht3': pandas.DataFrame({'date': ['2011-04-18', '2011-04-18',
#                                             '2011-04-18', '2011-04-18',
#                                             '2011-04-18', '2011-04-18',
#                                             '2011-04-18', '2011-04-18',
#                                             '2011-04-18', '2011-04-18',
#                                             '2011-04-27', '2011-04-27',
#                                             '2011-04-27', '2011-06-01',
#                                             '2011-06-01', '2011-06-01',
#                                             '2011-06-01', '2011-06-01'],
#                                    'PAI_vert_photo': [4.05, 3.16, 3.16,
#                                                       3.84, 3.27, 3.37, 3.5,
#                                                       3.65, 3, 3.03, 3.94,
#                                                       4.03, 3.9, 3.32, 3.51,
#                                                       3.52, 3.19, 3.69]}),
#          'Tremie12': pandas.DataFrame({'date': ['2012-03-09', '2012-03-09',
#                                                 '2012-03-09', '2012-03-09',
#                                                 '2012-03-09', '2012-03-09',
#                                                 '2012-03-09', '2012-03-09',
#                                                 '2012-03-09', '2012-03-09',
#                                                 '2012-03-09', '2012-03-09',
#                                                 '2012-03-09', '2012-04-11',
#                                                 '2012-04-11', '2012-04-11',
#                                                 '2012-04-11', '2012-04-11',
#                                                 '2012-04-11', '2012-04-11',
#                                                 '2012-04-11', '2012-04-11',
#                                                 '2012-04-11', '2012-04-11',
#                                                 '2012-04-11', '2012-04-11',
#                                                 '2012-04-11', '2012-05-09',
#                                                 '2012-05-09', '2012-05-09',
#                                                 '2012-05-09', '2012-05-09',
#                                                 '2012-05-09', '2012-05-09',
#                                                 '2012-05-09'],
#                                        'PAI_vert_photo': [1.09, 0.8, 1.02,
#                                                           1.09, 1.3, 0.88,
#                                                           0.74, 0.93, 0.87,
#                                                           1.08, 0.92, 1.22,
#                                                           1.23, 3.64, 3.45,
#                                                           3.8, 3.79, 5.69,
#                                                           3.97, 3.84, 4.35,
#                                                           4.31, 4.85, 5.15,
#                                                           4.18, 4.57, 4.52,
#                                                           3.84, 3.98, 4.2,
#                                                           4.22, 3.95, 3.99,
#                                                           4.54, 4.39]}),
#          'Tremie13': pandas.DataFrame({'date': ['2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-17',
#                                                 '2013-04-17', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-04-26', '2013-04-26',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-05-29',
#                                                 '2013-05-29', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13',
#                                                 '2013-06-13', '2013-06-13'],
#                                        'PAI_vert_photo': [1.84, 2, 1.91,
#                                                           1.43, 1.76, 2.07,
#                                                           1.82, 1.52, 1.42,
#                                                           1.96, 1.73, 1.65,
#                                                           1.61, 1.67, 1.48,
#                                                           1.52, 1.75, 1.7,
#                                                           2.07, 1.76, 1.82,
#                                                           1.69, 1.64, 2.35,
#                                                           2.15, 2.41, 2.4,
#                                                           2.13, 2.55, 2.28,
#                                                           2.76, 2.69, 2.41,
#                                                           3.07, 3.01, 3.24,
#                                                           3.32, 3.1, 2.25,
#                                                           2.38, 2.26, 2.3,
#                                                           2.17, 2.91, 2.78,
#                                                           2.97, 2.89, 2.69,
#                                                           3.13, 3.3, 3.25,
#                                                           3.22, 2.68, 2.78,
#                                                           2.51, 2.83, 2.65,
#                                                           2.79, 2.79, 2.99,
#                                                           2.95, 3.12, 2.84,
#                                                           2.79, 3.08, 2.62,
#                                                           2.99, 2.64, 2.76,
#                                                           2.97, 2.56, 2.7,
#                                                           2.62, 2.67, 2.82,
#                                                           2.72, 2.65, 2.06,
#                                                           1.87, 1.96, 1.84,
#                                                           1.96, 2.27, 2.14,
#                                                           2.17, 1.94, 2.04,
#                                                           2.07, 2.02, 1.88,
#                                                           1.68, 1.84, 1.84,
#                                                           1.83, 1.8, 1.74,
#                                                           1.74, 1.85, 2.05,
#                                                           2.06, 2.05,
#                                                           2.04]})}
#     # ajout convert date en TT
#     varieties = ['Mercia', 'Rht3', 'Tremie12', 'Tremie13']
#     for var in varieties:
#         d[var]['TT_date'] = 0.0
#         # d[var].date=map(str,d[var].date)
#         if var == 'Mercia' or var == 'Rht3':
#             corresp = shared_data(alinea.echap,
#                                   'corresp_TTHS_mercia_rht3.csv')
#             corresp = pandas.read_csv(corresp, decimal=',', sep=';')
#         else:
#             corresp = shared_data(alinea.echap,
#                                   'corresp_TTHS_' + var + '.csv')
#             corresp = pandas.read_csv(corresp, decimal=',', sep=';')
#         n = 0;
#         m = 0
#         while n < len(d[var]):
#             if corresp['DATE'][m] == d[var]['date'][n]:
#                 d[var]['TT_date'][n] = corresp['TT'][m]
#                 n = n + 1
#             else:
#                 m = m + 1
#     return d


        # scan + biomass LAI data